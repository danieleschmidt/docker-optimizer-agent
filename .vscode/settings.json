{
  "python.defaultInterpreterPath": "./venv/bin/python",
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": [
    "--line-length",
    "88",
    "--target-version",
    "py39"
  ],
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.ruffEnabled": true,
  "python.linting.ruffArgs": [
    "--config",
    "pyproject.toml"
  ],
  "python.linting.mypyEnabled": true,
  "python.linting.mypyArgs": [
    "--config-file",
    "pyproject.toml"
  ],
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.pytestArgs": [
    "tests/",
    "-v",
    "--tb=short"
  ],
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.autoFormatStrings": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true,
    "source.fixAll.ruff": true
  },
  "editor.rulers": [88],
  "files.associations": {
    "Dockerfile*": "dockerfile",
    "*.dockerfile": "dockerfile",
    "docker-compose*.yml": "dockercompose",
    "docker-compose*.yaml": "dockercompose",
    "*.toml": "toml",
    "*.yml": "yaml",
    "*.yaml": "yaml"
  },
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/node_modules": true,
    "**/.git": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/*.egg-info": true,
    "**/build": true,
    "**/dist": true,
    "**/.coverage": true,
    "**/htmlcov": true
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/venv": true,
    "**/.env": true,
    "**/build": true,
    "**/dist": true,
    "**/*.egg-info": true
  },
  "docker.defaultRegistry": "ghcr.io",
  "docker.showStartPage": false,
  "git.autofetch": true,
  "git.autofetchPeriod": 180,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.suggestSmartCommit": true,
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.env.linux": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  "yaml.schemas": {
    "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml",
    "https://json.schemastore.org/github-action.json": ".github/actions/*/action.yml",
    "https://json.schemastore.org/docker-compose.json": "docker-compose*.yml"
  },
  "emmet.includeLanguages": {
    "dockerfile": "shellscript"
  },
  "cSpell.words": [
    "Trivy",
    "Dockerfile",
    "dockerfiles",
    "optimizer",
    "optimization",
    "multistage",
    "buildkit",
    "pyproject",
    "pytest",
    "ruff",
    "mypy",
    "pylint",
    "isort",
    "pydantic",
    "uvicorn",
    "fastapi",
    "asyncio",
    "terragon",
    "SBOM",
    "CVE",
    "SAST",
    "DAST"
  ],
  "cSpell.ignorePaths": [
    "node_modules",
    "**/node_modules",
    "**/node_modules/**",
    "venv",
    "**/venv",
    "**/venv/**",
    ".git",
    "**/.git",
    "**/.git/**",
    "**/__pycache__",
    "**/.pytest_cache",
    "**/.mypy_cache",
    "**/.ruff_cache"
  ],
  "todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^)\\s*($TAGS)|^\\s*- \\[ \\])",
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "coverage-gutters.coverageFileNames": [
    "coverage.xml",
    "coverage.lcov",
    "coverage.json",
    ".coverage"
  ],
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,
  "autoDocstring.docstringFormat": "google",
  "autoDocstring.startOnNewLine": false,
  "workbench.colorCustomizations": {
    "activityBar.background": "#1e3a8a",
    "activityBar.foreground": "#ffffff",
    "statusBar.background": "#1e40af",
    "statusBar.foreground": "#ffffff"
  },
  "workbench.colorTheme": "Dark+ (default dark)"
}