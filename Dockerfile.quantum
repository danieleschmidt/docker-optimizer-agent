# Quantum Task Planner - Production Dockerfile
FROM python:3.13-slim AS builder

# Set build arguments
ARG BUILD_DATE
ARG VERSION=0.1.0
ARG VCS_REF

# Add metadata
LABEL maintainer="Daniel Schmidt <daniel@terragonlabs.com>" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="quantum-task-planner" \
      org.label-schema.description="Quantum-inspired intelligent task scheduling" \
      org.label-schema.version=$VERSION \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/danieleschmidt/quantum-inspired-task-planner" \
      org.label-schema.schema-version="1.0"

# Install system dependencies for building
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-dev.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Copy source code
COPY src/ ./src/
COPY pyproject.toml ./

# Install the package
RUN pip install --no-cache-dir .

# Production stage
FROM python:3.13-slim AS production

# Create non-root user
RUN groupadd -r quantum && useradd -r -g quantum -s /bin/false quantum

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application files
COPY --chown=quantum:quantum src/ ./src/
COPY --chown=quantum:quantum pyproject.toml ./

# Create directories with proper permissions
RUN mkdir -p /app/data /app/logs /app/config && \
    chown -R quantum:quantum /app

# Switch to non-root user
USER quantum

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src \
    QUANTUM_PLANNER_LOG_LEVEL=INFO \
    QUANTUM_PLANNER_DATA_DIR=/app/data \
    QUANTUM_PLANNER_LOG_DIR=/app/logs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "from src.quantum_task_planner.core.planner import QuantumTaskPlanner; print('OK')" || exit 1

# Expose port (if needed for API)
EXPOSE 8000

# Default command
CMD ["python", "-m", "src.quantum_task_planner.cli", "--help"]

# Development stage
FROM production AS development

# Switch back to root for development dependencies
USER root

# Install development dependencies
RUN pip install --no-cache-dir pytest pytest-cov black ruff mypy

# Install additional development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Switch back to quantum user
USER quantum

# Development command
CMD ["bash"]