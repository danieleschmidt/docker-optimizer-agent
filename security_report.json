{
  "scan_summary": {
    "total_findings": 789,
    "severity_breakdown": {
      "critical": 0,
      "high": 2,
      "medium": 730,
      "low": 57,
      "info": 0
    },
    "scan_date": "2024-01-01T00:00:00Z",
    "project_root": "/root/repo"
  },
  "findings": [
    {
      "severity": "medium",
      "category": "code_security",
      "title": "Potentially dangerous function: __import__",
      "description": "Dynamic imports may be insecure",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 141,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 62,
      "code_snippet": "task_id = f\"manual-{hash(f'{relative_path}:{line_num}') % 10000}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 68,
      "code_snippet": "title=f\"Address {pattern}: {line.strip()[:50]}...\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 70,
      "code_snippet": "description=f\"Found in {relative_path}:{line_num}\\n{line.strip()}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 71,
      "code_snippet": "acceptance_criteria=[f\"Resolve {pattern} in {relative_path}:{line_num}\"],",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 90,
      "code_snippet": "print(f\"Error in manual discovery: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 108,
      "code_snippet": "if os.system(f\"which {tool} >/dev/null 2>&1\") != 0:",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 115,
      "code_snippet": "title=f\"Install missing development dependencies: {tool_list}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 117,
      "code_snippet": "description=f\"Missing development tools: {', '.join([f'{tool} ({desc})' for tool, desc in missing_tools])}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential command_injection_risk",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 144,
      "code_snippet": "if \"warning: overriding recipe for target\" in os.popen(\"make help 2>&1\").read():",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 220,
      "code_snippet": "print(f\"  \ud83d\udccb {method_name}: {len(items)} items\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 223,
      "code_snippet": "print(f\"  \u274c {method_name} failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 225,
      "code_snippet": "print(f\"\ud83c\udfaf Total discovered: {len(all_discovered)} items\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 230,
      "code_snippet": "print(f\"\ud83d\ude80 Executing: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 244,
      "code_snippet": "print(f\"\u26a0\ufe0f  Task affects restricted path: {link}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 367,
      "code_snippet": "print(f\"\ud83d\udcbe Session metrics saved: {self.current_session['tasks_completed']} tasks completed\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 395,
      "code_snippet": "print(f\"\ud83d\udccb Added {len(new_items)} new items to backlog\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 413,
      "code_snippet": "print(f\"\u2705 Completed: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 416,
      "code_snippet": "print(f\"\ud83d\udeab Blocked: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_execution.py",
      "line_number": 424,
      "code_snippet": "print(f\"\ud83c\udfc1 Execution cycle complete: {executed_count} tasks executed\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 48,
      "code_snippet": "print(f\"Warning: Could not load scheduler state: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 56,
      "code_snippet": "print(f\"Warning: Could not save scheduler state: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 132,
      "code_snippet": "print(f\"\u274c Immediate cycle failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 171,
      "code_snippet": "print(f\"\u274c Hourly cycle failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 199,
      "code_snippet": "print(f\"\u274c Daily cycle failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 224,
      "code_snippet": "print(f\"\u274c Weekly cycle failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 242,
      "code_snippet": "print(f\"\u23f0 Executing {schedule_name} cycle...\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 259,
      "code_snippet": "print(f\"\u274c {schedule_name} cycle failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 268,
      "code_snippet": "print(f\"\ud83d\udd04 Starting continuous mode for {duration_hours} hours...\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 281,
      "code_snippet": "print(f\"\ud83d\udcc8 Executed {len(results)} cycles (total: {execution_count})\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 286,
      "code_snippet": "print(f\"  \u2705 {result['type']} cycle completed\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 288,
      "code_snippet": "print(f\"  \u274c {result['type']} cycle failed\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 293,
      "code_snippet": "print(f\"\ud83c\udfc1 Continuous mode completed: {execution_count} total executions\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 342,
      "code_snippet": "print(f\"Executed {len(results)} cycles\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "autonomous_scheduler.py",
      "line_number": 349,
      "code_snippet": "print(f\"\u2705 Executed {len(results)} scheduled cycles\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 138,
      "code_snippet": "id=f\"todo-{hash(line) % 100000}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 139,
      "code_snippet": "title=f\"{category.upper()}: {context.strip()[:60]}...\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 140,
      "code_snippet": "description=f\"Found in {relative_path}:{line_num}\\n{context.strip()}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 176,
      "code_snippet": "print(f\"Error discovering TODO comments: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 228,
      "code_snippet": "print(f\"Error discovering test failures: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 255,
      "code_snippet": "id=f\"perf-{hash(line) % 100000}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 256,
      "code_snippet": "title=f\"Performance optimization: {context.strip()[:50]}...\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 257,
      "code_snippet": "description=f\"Performance issue in {relative_path}:{line_num}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 290,
      "code_snippet": "print(f\"Error discovering performance issues: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 317,
      "code_snippet": "id=f\"sec-{hash(line) % 100000}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 318,
      "code_snippet": "title=f\"Security review: {context.strip()[:50]}...\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 319,
      "code_snippet": "description=f\"Security concern in {relative_path}:{line_num}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 353,
      "code_snippet": "print(f\"Error discovering security issues: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 469,
      "code_snippet": "print(f\"  \ud83d\udccb {method_name}: {len(items)} items\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 472,
      "code_snippet": "print(f\"  \u274c {method_name} failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 477,
      "code_snippet": "print(f\"\ud83c\udfaf Total discovered: {len(all_items)} value items\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 500,
      "code_snippet": "acceptance_criteria=[f\"Address issue in {item.file_path}\"],",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 552,
      "code_snippet": "results_file = status_dir / f\"discovery-{timestamp}.json\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 557,
      "code_snippet": "print(f\"\ud83d\udcbe Discovery results saved to {results_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 585,
      "code_snippet": "print(f\"\ud83d\udccb Added {len(new_items)} new items to autonomous backlog\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "enhanced_discovery.py",
      "line_number": 593,
      "code_snippet": "print(f\"  {i}. {item.title} (Score: {item.composite_score:.1f})\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "promote_todos.py",
      "line_number": 18,
      "code_snippet": "print(f\"Found {len(new_tasks)} NEW tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "promote_todos.py",
      "line_number": 26,
      "code_snippet": "print(f\"Promoted task to READY: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "promote_todos.py",
      "line_number": 30,
      "code_snippet": "print(f\"Promoted {promoted_count} tasks to READY status\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 15,
      "code_snippet": "print(f\"Current backlog has {len(backlog.backlog)} items\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 19,
      "code_snippet": "print(f\"Discovered {len(discovered)} new tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 29,
      "code_snippet": "print(f\"Promoted to READY: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 37,
      "code_snippet": "print(f\"Total backlog size: {len(backlog.backlog)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 38,
      "code_snippet": "print(f\"Promoted {promoted_count} tasks to READY status\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 42,
      "code_snippet": "print(f\"READY tasks: {len(ready_tasks)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "run_discovery.py",
      "line_number": 44,
      "code_snippet": "print(f\"  - {task.title} (WSJF: {task.wsjf_score:.2f})\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 18,
      "code_snippet": "print(f\"\ud83d\udce6 {description}...\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 22,
      "code_snippet": "print(f\"\u2705 {description} completed successfully\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 25,
      "code_snippet": "print(f\"\u274c {description} failed: {result.stderr}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 28,
      "code_snippet": "print(f\"\u274c {description} failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 31,
      "code_snippet": "print(f\"\u274c Command not found: {command[0]}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 39,
      "code_snippet": "print(f\"\u2705 Python {version.major}.{version.minor}.{version.micro} is compatible\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_dev.py",
      "line_number": 42,
      "code_snippet": "print(f\"\u274c Python {version.major}.{version.minor}.{version.micro} is not compatible. Need Python 3.9+\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 14,
      "code_snippet": "print(f\"\ud83d\udce6 {description}...\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 21,
      "code_snippet": "print(f\"\u2705 {description} completed successfully\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 24,
      "code_snippet": "print(f\"\u274c {description} failed: {result.stderr}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 27,
      "code_snippet": "print(f\"\u23f0 {description} timed out after {timeout}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 30,
      "code_snippet": "print(f\"\u274c {description} error: {str(e)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 39,
      "code_snippet": "print(f\"\ud83d\udcc1 Working directory: {repo_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 95,
      "code_snippet": "if run_command(cmd, f\"Verifying {name}\", check=False):",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "setup_environment.py",
      "line_number": 104,
      "code_snippet": "print(f\"\u2705 Completed: {success_count}/{total_steps} steps\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 16,
      "code_snippet": "print(f\"Current backlog size: {len(backlog.backlog)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 28,
      "code_snippet": "print(f\"Found {len(actionable_tasks)} potentially actionable tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 34,
      "code_snippet": "print(f\"\\n--- Executing Task {i+1}/5 ---\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 35,
      "code_snippet": "print(f\"Task: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 45,
      "code_snippet": "print(f\"\u2705 Completed: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 47,
      "code_snippet": "print(f\"\u274c Failed: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 55,
      "code_snippet": "print(f\"\u2705 Completed {len(completed_tasks)} tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 56,
      "code_snippet": "print(f\"\ud83d\udcca Total backlog size: {len(backlog.backlog)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "targeted_execution.py",
      "line_number": 60,
      "code_snippet": "print(f\"\ud83d\udcc8 Tasks marked DONE: {len(done_tasks)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "value_dashboard.py",
      "line_number": 247,
      "code_snippet": "report += f\"- **{status}**: {count} items ({percentage:.1f}%)\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "value_dashboard.py",
      "line_number": 255,
      "code_snippet": "report += f\"- **{item_type}**: {count} items ({percentage:.1f}%)\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "value_dashboard.py",
      "line_number": 262,
      "code_snippet": "report += f\"{i}. **{item['title']}** (WSJF: {item['wsjf_score']})\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "value_dashboard.py",
      "line_number": 263,
      "code_snippet": "report += f\"   - Type: {item['type']} | Status: {item['status']}\\n\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "value_dashboard.py",
      "line_number": 330,
      "code_snippet": "report_file = self.status_dir / f\"value-dashboard-{timestamp}.md\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "value_dashboard.py",
      "line_number": 379,
      "code_snippet": "print(f\"Dashboard saved to: {report_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 91,
      "code_snippet": "title=f\"Potential {secret_type} found\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 92,
      "code_snippet": "description=f\"Line {i} may contain hardcoded secrets\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 98,
      "code_snippet": "logger.warning(f\"Error scanning {file_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 131,
      "code_snippet": "title=f\"Potentially dangerous function: {func_name}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 144,
      "code_snippet": "title=f\"Imported potentially dangerous module: {name.name}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 151,
      "code_snippet": "logger.warning(f\"Could not parse {file_path} for AST analysis\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 154,
      "code_snippet": "logger.warning(f\"Error scanning imports in {file_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 181,
      "code_snippet": "title=f\"Potential {risk_type}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 189,
      "code_snippet": "logger.warning(f\"Error scanning {file_path} for injection risks: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 228,
      "code_snippet": "logger.warning(f\"Error checking permissions for {file_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 267,
      "code_snippet": "title=f\"Potentially vulnerable dependency: {package_name}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 273,
      "code_snippet": "logger.warning(f\"Error checking requirements file {req_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 301,
      "code_snippet": "title=f\"Quantum algorithm risk: {risk_type}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 309,
      "code_snippet": "logger.warning(f\"Error scanning quantum algorithms in {file_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 359,
      "code_snippet": "logger.warning(f\"Error validating error handling in {file_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 395,
      "code_snippet": "logger.warning(f\"Error checking input validation in {file_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 495,
      "code_snippet": "print(f\"Total Findings: {summary['total_findings']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 496,
      "code_snippet": "print(f\"Critical: {summary['severity_breakdown']['critical']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 497,
      "code_snippet": "print(f\"High: {summary['severity_breakdown']['high']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 498,
      "code_snippet": "print(f\"Medium: {summary['severity_breakdown']['medium']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 499,
      "code_snippet": "print(f\"Low: {summary['severity_breakdown']['low']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 500,
      "code_snippet": "print(f\"Info: {summary['severity_breakdown']['info']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 506,
      "code_snippet": "print(f\"\\n[{finding['severity'].upper()}] {finding['title']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 507,
      "code_snippet": "print(f\"  File: {finding['file_path']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 509,
      "code_snippet": "print(f\"  Line: {finding['line_number']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 510,
      "code_snippet": "print(f\"  Description: {finding['description']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 512,
      "code_snippet": "print(f\"  Code: {finding['code_snippet']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 515,
      "code_snippet": "print(f\"\\n... and {len(report['findings']) - 10} more findings\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 520,
      "code_snippet": "print(f\"  \u2022 {rec}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 527,
      "code_snippet": "print(f\"\\n\ud83d\udcc4 Full report saved to: {report_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 550,
      "code_snippet": "print(f\"\\n\ud83c\udfaf Security Grade: {security_grade}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "security_scan.py",
      "line_number": 551,
      "code_snippet": "print(f\"Weighted Score: {total_weighted_score}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 39,
      "code_snippet": "print(f\"Benchmarking {name}...\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 52,
      "code_snippet": "print(f\"  Iteration {i+1}: {execution_time:.4f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 93,
      "code_snippet": "results_file = results_dir / f\"benchmark-{int(time.time())}.json\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 102,
      "code_snippet": "print(f\"Results saved to {results_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 112,
      "code_snippet": "print(f\"\\n{benchmark['name'].upper()}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 113,
      "code_snippet": "print(f\"  Lines: {benchmark['dockerfile_lines']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 114,
      "code_snippet": "print(f\"  Size: {benchmark['dockerfile_size_bytes']} bytes\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 115,
      "code_snippet": "print(f\"  Mean time: {benchmark['mean_time']:.4f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 116,
      "code_snippet": "print(f\"  Median time: {benchmark['median_time']:.4f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 117,
      "code_snippet": "print(f\"  Min time: {benchmark['min_time']:.4f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 118,
      "code_snippet": "print(f\"  Max time: {benchmark['max_time']:.4f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "benchmarks/run_benchmarks.py",
      "line_number": 119,
      "code_snippet": "print(f\"  Std dev: {benchmark['std_dev']:.4f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 99,
      "code_snippet": "logger.info(f\"DRY RUN: Would execute: {' '.join(command)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 117,
      "code_snippet": "logger.error(f\"Command timed out after {timeout}s: {' '.join(command)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 120,
      "code_snippet": "logger.error(f\"Command failed: {' '.join(command)}, Error: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 187,
      "code_snippet": "logger.error(f\"Dependency update failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 272,
      "code_snippet": "logger.error(f\"Security scan failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 320,
      "code_snippet": "f\"{coverage}%\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 355,
      "code_snippet": "logger.error(f\"Documentation generation failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 364,
      "code_snippet": "badge_pattern = f\"![{badge_type}]\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 365,
      "code_snippet": "new_badge = f\"![{badge_type}](https://img.shields.io/badge/{badge_type}-{value.replace('%', '%25')}-{color})\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 369,
      "code_snippet": "pattern = rf\"!\\[{badge_type}\\]\\([^)]+\\)\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 399,
      "code_snippet": "logger.error(f\"Metrics collection failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 456,
      "code_snippet": "logger.error(f\"Cleanup tasks failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 495,
      "code_snippet": "\"value\": f\"{(datetime.now(timezone.utc) - self.start_time).total_seconds():.1f}s\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 509,
      "code_snippet": "issue_title = f\"\ud83d\udea8 Automation Pipeline Failure - {datetime.now().strftime('%Y-%m-%d %H:%M')}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 541,
      "code_snippet": "logger.error(f\"Notification sending failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 552,
      "code_snippet": "summary = f\"Pipeline completed: {successful_tasks}/{total_tasks} tasks successful\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 558,
      "code_snippet": "summary += f\"{status_emoji} {task_name}: {result.get('status', 'unknown')}\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 572,
      "code_snippet": "failed_tasks.append(f\"- {task_name}: {error}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 610,
      "code_snippet": "logger.info(f\"Running tasks: {', '.join(tasks_to_run)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 615,
      "code_snippet": "logger.info(f\"\u25b6\ufe0f Starting task: {task_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 619,
      "code_snippet": "logger.info(f\"\u2705 Completed task: {task_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 621,
      "code_snippet": "logger.error(f\"\u274c Failed task: {task_name}, Error: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 646,
      "code_snippet": "report_file = Path(f\"automation-report-{datetime.now().strftime('%Y%m%d-%H%M%S')}.json\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 650,
      "code_snippet": "logger.info(f\"\ud83c\udf89 Pipeline completed in {pipeline_duration:.1f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/automation-pipeline.py",
      "line_number": 651,
      "code_snippet": "logger.info(f\"\ud83d\udcc4 Report saved to {report_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 194,
      "code_snippet": "metrics[f\"{image.split(':')[1]}_image_size_mb\"] = size_mb",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 213,
      "code_snippet": "api_url = f\"https://api.github.com/repos/{repo}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 230,
      "code_snippet": "print(f\"Warning: Could not fetch GitHub metrics: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 242,
      "code_snippet": "api_url = f\"https://pypi.org/pypi/{package}/json\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 251,
      "code_snippet": "downloads_url = f\"https://pypistats.org/api/packages/{package}/recent\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 264,
      "code_snippet": "print(f\"Warning: Could not fetch PyPI metrics: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 276,
      "code_snippet": "\"python_version\": f\"{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 294,
      "code_snippet": "print(f\"\u2705 Collected {name} metrics: {len(metrics)} items\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 296,
      "code_snippet": "print(f\"\u274c Failed to collect {name} metrics: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 309,
      "code_snippet": "print(f\"\ud83d\udcc4 Metrics saved to {output_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 313,
      "code_snippet": "backup_file = output_file.parent / f\"metrics_backup_{timestamp}.json\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 317,
      "code_snippet": "print(f\"\ud83d\udcbe Backup saved to {backup_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 323,
      "code_snippet": "summary.append(f\"Generated on: {metrics['collection_info']['timestamp']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 330,
      "code_snippet": "summary.append(f\"- Total commits: {git_metrics.get('total_commits', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 331,
      "code_snippet": "summary.append(f\"- Contributors: {git_metrics.get('total_contributors', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 332,
      "code_snippet": "summary.append(f\"- Recent activity: {git_metrics.get('commits_last_month', 'N/A')} commits last month\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 339,
      "code_snippet": "summary.append(f\"- Code coverage: {quality_metrics.get('code_coverage', 'N/A')}%\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 340,
      "code_snippet": "summary.append(f\"- Lines of code: {quality_metrics.get('lines_of_code', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 341,
      "code_snippet": "summary.append(f\"- Test files: {quality_metrics.get('test_files', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 342,
      "code_snippet": "summary.append(f\"- Linting issues: {quality_metrics.get('linting_issues', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 350,
      "code_snippet": "summary.append(f\"- High severity issues: {issues.get('high', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 351,
      "code_snippet": "summary.append(f\"- Medium severity issues: {issues.get('medium', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 352,
      "code_snippet": "summary.append(f\"- Low severity issues: {issues.get('low', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 359,
      "code_snippet": "summary.append(f\"- Stars: {github_metrics.get('github_stars', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 360,
      "code_snippet": "summary.append(f\"- Forks: {github_metrics.get('github_forks', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 361,
      "code_snippet": "summary.append(f\"- Open issues: {github_metrics.get('github_issues', 'N/A')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 411,
      "code_snippet": "print(f\"\\n\ud83d\udccb Summary saved to {summary_file}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 44,
      "code_snippet": "result += \"  \" * indent + f\"{key}: \"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 48,
      "code_snippet": "result += f\"{value}\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 57,
      "code_snippet": "result += f\"{item}\\n\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 252,
      "code_snippet": "task_id = f\"todo-{hash(line) % 10000}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 258,
      "code_snippet": "title=f\"TODO: {content.strip()[:50]}...\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 260,
      "code_snippet": "description=f\"Found in {file_path}:{line_num} - {content.strip()}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 261,
      "code_snippet": "acceptance_criteria=[f\"Resolve TODO in {file_path}:{line_num}\"],",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 298,
      "code_snippet": "print(f\"\ud83d\ude80 Starting task: {task.title} (WSJF: {task.wsjf_score:.2f})\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 317,
      "code_snippet": "print(f\"\u2705 Completed task: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 320,
      "code_snippet": "print(f\"\u274c Task blocked: {task.title}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 383,
      "code_snippet": "metrics_file = self.status_dir / f\"metrics-{timestamp.split('T')[0]}.json\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 388,
      "code_snippet": "md_file = self.status_dir / f\"summary-{timestamp.split('T')[0]}.md\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 390,
      "code_snippet": "f.write(f\"# Autonomous Backlog Status - {timestamp.split('T')[0]}\\n\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 391,
      "code_snippet": "f.write(f\"**Generated**: {timestamp}\\n\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 396,
      "code_snippet": "f.write(f\"- \u2705 **{task.title}** (WSJF: {task.wsjf_score:.2f})\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 399,
      "code_snippet": "f.write(f\"- **{status}**: {count} items\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 401,
      "code_snippet": "f.write(f\"- **Lint**: {'\u2705 PASSED' if ci_results['lint']['passed'] else '\u274c FAILED'}\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 402,
      "code_snippet": "f.write(f\"- **Tests**: {'\u2705 PASSED' if ci_results['tests']['passed'] else '\u274c FAILED'}\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 403,
      "code_snippet": "f.write(f\"- **Build**: {'\u2705 PASSED' if ci_results['build']['passed'] else '\u274c FAILED'}\\n\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 413,
      "code_snippet": "print(f\"\\n--- Iteration {iteration + 1}/{max_iterations} ---\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 418,
      "code_snippet": "print(f\"\ud83d\udccb Discovered {len(discovered)} new tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 446,
      "code_snippet": "print(f\"\u2705 Completed {len(completed_tasks)} tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 447,
      "code_snippet": "print(f\"\ud83d\udcca Metrics saved to {self.status_dir}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_config.py",
      "line_number": 209,
      "code_snippet": "assert len(errors) == 0, f\"Valid config should have no errors, got: {errors}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 34,
      "code_snippet": "assert content.strip(), f\"Dockerfile {dockerfile_path.name} is empty\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 35,
      "code_snippet": "assert \"FROM\" in content.upper(), f\"Dockerfile {dockerfile_path.name} has no FROM instruction\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 40,
      "code_snippet": "assert len(from_lines) >= 1, f\"Dockerfile {dockerfile_path.name} has no FROM instruction\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 51,
      "code_snippet": "pytest.fail(f\"Invalid JSON in {json_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 62,
      "code_snippet": "pytest.fail(f\"Invalid YAML in {yaml_path}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 88,
      "code_snippet": "assert field in vuln, f\"Vulnerability missing {field}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_data_validation.py",
      "line_number": 113,
      "code_snippet": "assert isinstance(config_data, dict), f\"Config {config_path.name} is not a dictionary\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 23,
      "code_snippet": "print(f\"\u2705 Package imported successfully with {len(docker_optimizer.__all__)} available components\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 25,
      "code_snippet": "assert False, f\"Package should not fail import: {e}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 34,
      "code_snippet": "print(f\"\u2705 logging_observability imported, PSUTIL_AVAILABLE={PSUTIL_AVAILABLE}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 36,
      "code_snippet": "assert False, f\"logging_observability should handle missing psutil: {e}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 47,
      "code_snippet": "print(f\"\u2705 Core package functional with version {docker_optimizer.__version__}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 49,
      "code_snippet": "assert False, f\"Core package should work: {e}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 64,
      "code_snippet": "print(f\"\u274c test_core_package_imports_without_pydantic: FAILED - {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 70,
      "code_snippet": "print(f\"\u274c test_core_package_imports_without_psutil: FAILED - {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 76,
      "code_snippet": "print(f\"\u274c test_cli_works_with_minimal_dependencies: FAILED - {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 102,
      "code_snippet": "assert original_build[\"success\"], f\"Original build failed: {original_build['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 103,
      "code_snippet": "assert optimized_build[\"success\"], f\"Optimized build failed: {optimized_build['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 142,
      "code_snippet": "assert build_result[\"success\"], f\"Multi-stage build failed: {build_result['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 168,
      "code_snippet": "assert build_result[\"success\"], f\"Secure build failed: {build_result['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 222,
      "code_snippet": "assert original_build[\"success\"], f\"Original complex build failed: {original_build['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 223,
      "code_snippet": "assert optimized_build[\"success\"], f\"Optimized complex build failed: {optimized_build['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 255,
      "code_snippet": "assert build_result[\"success\"], f\"Node.js build failed: {build_result['build_error']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_integration.py",
      "line_number": 265,
      "code_snippet": "assert run_result.returncode == 0, f\"Container execution failed: {run_result.stderr}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_language_optimizer.py",
      "line_number": 422,
      "code_snippet": "(project_path / f\"file_{i}.py\").write_text(f\"# File {i}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_optimizer.py",
      "line_number": 168,
      "code_snippet": "dockerfile_content = f\"FROM {base_image}\\nRUN echo hello\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 125,
      "code_snippet": "id=f\"task_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 126,
      "code_snippet": "name=f\"Test Task {i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 136,
      "code_snippet": "task.add_dependency(f\"task_{i-1}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 149,
      "code_snippet": "id=f\"resource_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 150,
      "code_snippet": "name=f\"Test Resource {i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 449,
      "code_snippet": "id=f\"task_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 450,
      "code_snippet": "name=f\"Task {i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 456,
      "code_snippet": "task.add_dependency(f\"task_{i-1}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 464,
      "code_snippet": "id=f\"resource_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_quantum_task_planner.py",
      "line_number": 465,
      "code_snippet": "name=f\"Resource {i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_algorithms.py",
      "line_number": 277,
      "code_snippet": "id=f\"task_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_algorithms.py",
      "line_number": 278,
      "code_snippet": "name=f\"Task {i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_algorithms.py",
      "line_number": 286,
      "code_snippet": "task.add_dependency(f\"task_{i-1}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_algorithms.py",
      "line_number": 290,
      "code_snippet": "task.add_dependency(f\"task_{i-2}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_algorithms.py",
      "line_number": 298,
      "code_snippet": "id=f\"res_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "tests/test_algorithms.py",
      "line_number": 299,
      "code_snippet": "name=f\"Resource {i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 42,
      "code_snippet": "f\"Unsupported policy format. Supported: {self.supported_formats}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 58,
      "code_snippet": "raise ValueError(f\"Failed to parse policy file: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 60,
      "code_snippet": "raise ValueError(f\"Policy validation failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 446,
      "code_snippet": "f\"Unsupported compliance framework: {framework}. \"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 447,
      "code_snippet": "f\"Supported: {self.compliance_checker.supported_frameworks}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 656,
      "code_snippet": "recommendations.append(f\"Address {critical_count} critical security violations immediately\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 658,
      "code_snippet": "recommendations.append(f\"Fix {high_count} high-severity security issues\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 662,
      "code_snippet": "analysis = f\"Found {len(violations)} security violations. Score: {score}/100\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 693,
      "code_snippet": "report.append(f\"{i}. {severity_emoji} {violation.vulnerability}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 694,
      "code_snippet": "report.append(f\"   Severity: {violation.severity}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 695,
      "code_snippet": "report.append(f\"   Description: {violation.description}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 696,
      "code_snippet": "report.append(f\"   Fix: {violation.fix}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 216,
      "code_snippet": "click.echo(f\"\u2705 Loaded custom security policy: {security_policy}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 218,
      "code_snippet": "click.echo(f\"Error loading security policy: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 259,
      "code_snippet": "click.echo(f\"Error loading custom preset: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 274,
      "code_snippet": "f\"Error: Dockerfile not found at {dockerfile_path}\", err=True",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 283,
      "code_snippet": "click.echo(f\"Error: Dockerfile is empty: {dockerfile_path}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 287,
      "code_snippet": "click.echo(f\"Warning: Dockerfile should start with FROM instruction: {dockerfile_path}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 293,
      "code_snippet": "click.echo(f\"Error: Permission denied reading {dockerfile_path}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 296,
      "code_snippet": "click.echo(f\"Error: Invalid UTF-8 encoding in {dockerfile_path}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 299,
      "code_snippet": "click.echo(f\"Error reading Dockerfile: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 510,
      "code_snippet": "click.echo(f\"Error: {str(e)}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 532,
      "code_snippet": "click.echo(f\"Base Image: {analysis.base_image}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 533,
      "code_snippet": "click.echo(f\"Total Layers: {analysis.total_layers}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 536,
      "code_snippet": "click.echo(f\"Estimated Size: {analysis.estimated_size}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 541,
      "code_snippet": "click.echo(f\"  {i}. {issue}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 548,
      "code_snippet": "click.echo(f\"  {i}. {opp}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 570,
      "code_snippet": "f\"Original Size: {result.original_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 571,
      "code_snippet": "f\"Optimized Size: {result.optimized_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 572,
      "code_snippet": "f\"Explanation: {result.explanation}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 577,
      "code_snippet": "f\"\\n\ud83d\udd12 Security Fixes Applied: {len(result.security_fixes)}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 581,
      "code_snippet": "summary_lines.append(f\"  \u2022 {fix.description} ({fix.severity})\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 585,
      "code_snippet": "f\"\\n\u26a1 Layer Optimizations: {len(result.layer_optimizations)}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 589,
      "code_snippet": "summary_lines.append(f\"  \u2022 {opt.reasoning}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 600,
      "code_snippet": "click.echo(f\"\u2705 Optimized Dockerfile written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 625,
      "code_snippet": "f\"Estimated Size Reduction: {result.estimated_size_reduction}MB\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 626,
      "code_snippet": "f\"Security Improvements: {result.security_improvements}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 627,
      "code_snippet": "f\"Number of Stages: {len(result.stages)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 628,
      "code_snippet": "f\"Explanation: {result.explanation}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 635,
      "code_snippet": "f\"  {i}. {stage.name} ({stage.purpose}) - {stage.base_image}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 651,
      "code_snippet": "click.echo(f\"\u2705 Multi-stage Dockerfile written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 688,
      "code_snippet": "f\"Security Score: {security_score.score}/100 (Grade: {security_score.grade})\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 689,
      "code_snippet": "f\"Total Vulnerabilities: {vulnerability_report.total_vulnerabilities}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 695,
      "code_snippet": "f\"  Critical: {vulnerability_report.critical_count}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 696,
      "code_snippet": "f\"  High: {vulnerability_report.high_count}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 697,
      "code_snippet": "f\"  Medium: {vulnerability_report.medium_count}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 698,
      "code_snippet": "f\"  Low: {vulnerability_report.low_count}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 702,
      "code_snippet": "summary_lines.append(f\"\\nAnalysis: {security_score.analysis}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 708,
      "code_snippet": "f\"  {i}. {cve.cve_id} ({cve.severity}) - {cve.package}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 711,
      "code_snippet": "summary_lines.append(f\"     Fix: Update to {cve.fixed_version}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 716,
      "code_snippet": "summary_lines.append(f\"  {i}. {suggestion}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 721,
      "code_snippet": "summary_lines.append(f\"  {i}. {rec}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 728,
      "code_snippet": "click.echo(f\"\u2705 Security scan results written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 753,
      "code_snippet": "click.echo(f\"Warning: Dockerfile not found at {dockerfile_path}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 766,
      "code_snippet": "click.echo(f\"\\n{'='*50}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 767,
      "code_snippet": "click.echo(f\"Results for: {dockerfile_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 768,
      "code_snippet": "click.echo(f\"{'='*50}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 775,
      "code_snippet": "base_path.parent / f\"{base_path.stem}_{i+1}{base_path.suffix}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 782,
      "code_snippet": "click.echo(f\"\\n{'='*50}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 784,
      "code_snippet": "click.echo(f\"{'='*50}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 799,
      "code_snippet": "click.echo(f\"Warning: Dockerfile not found at {dockerfile_path}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 805,
      "code_snippet": "click.echo(f\"\\n{'='*50}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 806,
      "code_snippet": "click.echo(f\"Results for: {dockerfile_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 807,
      "code_snippet": "click.echo(f\"{'='*50}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 814,
      "code_snippet": "base_path.parent / f\"{base_path.stem}_{i+1}{base_path.suffix}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 834,
      "code_snippet": "click.echo(f\"Processing Time: {performance_report['processing_time']:.2f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 835,
      "code_snippet": "click.echo(f\"Memory Usage: {performance_report['memory_usage_mb']:.1f}MB\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 837,
      "code_snippet": "f\"Dockerfiles Processed: {performance_report['dockerfiles_processed']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 839,
      "code_snippet": "click.echo(f\"Cache Hits: {performance_report['cache_hits']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 840,
      "code_snippet": "click.echo(f\"Cache Misses: {performance_report['cache_misses']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 841,
      "code_snippet": "click.echo(f\"Cache Hit Ratio: {performance_report['cache_hit_ratio']:.1%}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 843,
      "code_snippet": "f\"Cache Size: {performance_report['cache_size']}/{performance_report['cache_max_size']}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 896,
      "code_snippet": "click.echo(f\"\ud83d\udd0d Docker Image Analysis: {analysis.image_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 898,
      "code_snippet": "click.echo(f\"Total Size: {analysis.total_size_mb:.1f}MB\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 899,
      "code_snippet": "click.echo(f\"Layer Count: {analysis.layer_count}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 900,
      "code_snippet": "click.echo(f\"Docker Available: {'Yes' if analysis.docker_available else 'No'}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 901,
      "code_snippet": "click.echo(f\"Analysis Method: {analysis.analysis_method}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 907,
      "code_snippet": "click.echo(f\"Layer {i}: {layer.layer_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 908,
      "code_snippet": "click.echo(f\"  Size: {layer.size_human}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 910,
      "code_snippet": "click.echo(f\"  Command: {layer.command}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 911,
      "code_snippet": "click.echo(f\"  Created: {layer.created}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 972,
      "code_snippet": "click.echo(f\"Traditional Size Estimate: {breakdown['traditional_estimate']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 974,
      "code_snippet": "f\"Layer-Based Size Estimate: {breakdown['total_estimated_size_mb']:.1f}MB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 976,
      "code_snippet": "click.echo(f\"Estimated Layers: {breakdown['estimated_layers']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 977,
      "code_snippet": "click.echo(f\"Largest Layer: {breakdown['largest_layer_mb']:.1f}MB\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 978,
      "code_snippet": "click.echo(f\"Efficiency Score: {breakdown['dockerfile_efficiency_score']}/100\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 997,
      "code_snippet": "click.echo(f\"Layer {i}: {layer.layer_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 998,
      "code_snippet": "click.echo(f\"  Estimated Size: {estimated_mb:.1f}MB\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 999,
      "code_snippet": "click.echo(f\"  Command: {layer.command}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1092,
      "code_snippet": "click.echo(f\"Security Score: {score.score}/100 (Grade: {score.grade})\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1093,
      "code_snippet": "click.echo(f\"Analysis: {score.analysis}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1098,
      "code_snippet": "click.echo(f\"  Policies Applied: {', '.join(result.policies_applied)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1099,
      "code_snippet": "click.echo(f\"  Rules Evaluated: {result.rules_evaluated}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1100,
      "code_snippet": "click.echo(f\"  Execution Time: {result.execution_time_ms:.2f}ms\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1101,
      "code_snippet": "click.echo(f\"  Total Violations: {result.total_violations}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1116,
      "code_snippet": "click.echo(f\"  {severity_emoji} {severity}: {count}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1131,
      "code_snippet": "click.echo(f\"{i}. {severity_emoji} {violation.vulnerability}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1132,
      "code_snippet": "click.echo(f\"   Severity: {violation.severity}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1133,
      "code_snippet": "click.echo(f\"   Description: {violation.description}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1134,
      "code_snippet": "click.echo(f\"   Fix: {violation.fix}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1142,
      "code_snippet": "click.echo(f\"{i}. {cv.framework} - {cv.rule_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1143,
      "code_snippet": "click.echo(f\"   Severity: {cv.severity}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1144,
      "code_snippet": "click.echo(f\"   Requirement: {cv.requirement}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1145,
      "code_snippet": "click.echo(f\"   Description: {cv.description}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1146,
      "code_snippet": "click.echo(f\"   Remediation: {cv.remediation}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1154,
      "code_snippet": "click.echo(f\"{i}. {rec}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1220,
      "code_snippet": "f\"  Detected Language: {language_analysis['language']}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1221,
      "code_snippet": "f\"  Language Confidence: {language_analysis['language_confidence']:.2f}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1226,
      "code_snippet": "f\"  Detected Framework: {language_analysis['framework']}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1227,
      "code_snippet": "f\"  Framework Confidence: {language_analysis['framework_confidence']:.2f}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1233,
      "code_snippet": "f\"  Original Size: {opt_result.original_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1234,
      "code_snippet": "f\"  Optimized Size: {opt_result.optimized_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1235,
      "code_snippet": "f\"  Explanation: {opt_result.explanation}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1252,
      "code_snippet": "lines.append(f\"{priority_emoji} {suggestion.message}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1254,
      "code_snippet": "lines.append(f\"   Explanation: {suggestion.explanation}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1256,
      "code_snippet": "lines.append(f\"   Example: {suggestion.fix_example}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1269,
      "code_snippet": "click.echo(f\"Results written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1286,
      "code_snippet": "raise ValueError(f\"Unsupported registry type: {registry_type}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1298,
      "code_snippet": "registry_url=f\"https://{registry_type.lower()}.example.com\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1420,
      "code_snippet": "f\"  Registry: {getattr(registry_data, 'registry_type', 'unknown')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1421,
      "code_snippet": "f\"  Image: {getattr(registry_data, 'image_name', 'unknown')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1424,
      "code_snippet": "f\"  Critical: {getattr(registry_data, 'critical_count', 0)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1425,
      "code_snippet": "f\"  High: {getattr(registry_data, 'high_count', 0)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1426,
      "code_snippet": "f\"  Medium: {getattr(registry_data, 'medium_count', 0)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1427,
      "code_snippet": "f\"  Low: {getattr(registry_data, 'low_count', 0)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1444,
      "code_snippet": "lines.append(f\"{priority_emoji} {getattr(rec, 'description', '')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1446,
      "code_snippet": "lines.append(f\"   Type: {getattr(rec, 'type', 'unknown')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1447,
      "code_snippet": "lines.append(f\"   Registry-Specific: {getattr(rec, 'registry_specific', True)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1452,
      "code_snippet": "f\"  Original Size: {opt_result.original_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1453,
      "code_snippet": "f\"  Optimized Size: {opt_result.optimized_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1454,
      "code_snippet": "f\"  Explanation: {opt_result.explanation}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1465,
      "code_snippet": "click.echo(f\"Results written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1481,
      "code_snippet": "click.echo(f\"\ud83d\ude80 {preset_type.value}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1482,
      "code_snippet": "click.echo(f\"   Description: {preset.description}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1483,
      "code_snippet": "click.echo(f\"   Target Use Case: {preset.target_use_case}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1484,
      "code_snippet": "click.echo(f\"   Optimizations: {len(preset.optimizations)} steps\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1592,
      "code_snippet": "f\"\ud83d\udccb Applied Preset: {getattr(selected_preset, 'name', 'Unknown')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1593,
      "code_snippet": "f\"   Type: {getattr(selected_preset, 'preset_type', 'CUSTOM')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1594,
      "code_snippet": "f\"   Description: {getattr(selected_preset, 'description', '')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1597,
      "code_snippet": "f\"  Detected Language: {language_analysis.get('language', 'unknown')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1598,
      "code_snippet": "f\"  Language Confidence: {language_analysis.get('language_confidence', 0.0):.2f}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1599,
      "code_snippet": "f\"  Detected Framework: {language_analysis.get('framework', 'unknown')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1600,
      "code_snippet": "f\"  Framework Confidence: {language_analysis.get('framework_confidence', 0.0):.2f}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1603,
      "code_snippet": "f\"  Original Size: {opt_result.original_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1604,
      "code_snippet": "f\"  Optimized Size: {opt_result.optimized_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1605,
      "code_snippet": "f\"  Explanation: {opt_result.explanation}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1616,
      "code_snippet": "lines.append(f\"{priority_icon} {suggestion.message}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1625,
      "code_snippet": "lines.append(f\"\u2022 {getattr(opt, 'name', '')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1626,
      "code_snippet": "lines.append(f\"  {getattr(opt, 'description', '')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1640,
      "code_snippet": "click.echo(f\"Results written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1715,
      "code_snippet": "f\"  Type: {getattr(selected_preset, 'preset_type', 'CUSTOM')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1716,
      "code_snippet": "f\"  Name: {getattr(selected_preset, 'name', 'Unknown')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1717,
      "code_snippet": "f\"  Description: {getattr(selected_preset, 'description', '')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1718,
      "code_snippet": "f\"  Target Use Case: {getattr(selected_preset, 'target_use_case', '')}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1728,
      "code_snippet": "lines.append(f\"{i}. {getattr(opt, 'name', 'Unknown optimization')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1730,
      "code_snippet": "lines.append(f\"   Description: {getattr(opt, 'description', '')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1731,
      "code_snippet": "lines.append(f\"   Reasoning: {getattr(opt, 'reasoning', '')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1733,
      "code_snippet": "lines.append(f\"   Change: {getattr(opt, 'dockerfile_change', '')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1738,
      "code_snippet": "f\"  Original Size: {opt_result.original_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1739,
      "code_snippet": "f\"  Optimized Size: {opt_result.optimized_size}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1740,
      "code_snippet": "f\"  Explanation: {opt_result.explanation}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1751,
      "code_snippet": "click.echo(f\"Results written to {output_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 34,
      "code_snippet": "msg += \"\\nSuggestions:\\n\" + \"\\n\".join(f\"  - {s}\" for s in self.suggestions)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 73,
      "code_snippet": "f\"Failed to load configuration from {config_path}: {e}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 106,
      "code_snippet": "raise ConfigError(f\"Configuration file not found: {config_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 239,
      "code_snippet": "raise ConfigError(f\"Failed to parse configuration file {config_path}: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 241,
      "code_snippet": "raise ConfigError(f\"Failed to read configuration file {config_path}: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 301,
      "code_snippet": "f\"Invalid value for {env_var}: {error_msg}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 302,
      "code_snippet": "field_path=f\"{section}.{key}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 303,
      "code_snippet": "suggestions=[f\"Example: {env_var}=100\" if type_func == int else f\"Example: {env_var}=true\"]",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 310,
      "code_snippet": "error_msg = f\"Invalid environment variable {env_var}={value}: {e}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 312,
      "code_snippet": "f\"Check that the value is a valid {type_func.__name__}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 313,
      "code_snippet": "f\"Example: {env_var}={'true' if type_func == bool else '100' if type_func == int else 'text'}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 315,
      "code_snippet": "raise ConfigError(error_msg, field_path=f\"{section}.{key}\", suggestions=suggestions)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 386,
      "code_snippet": "errors.append(f\"layer_estimation.{key} must be a positive integer\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 392,
      "code_snippet": "errors.append(f\"default_fallbacks.{key} must be a positive integer\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 401,
      "code_snippet": "errors.append(f\"base_image_sizes.{image} must be a positive integer\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 410,
      "code_snippet": "errors.append(f\"package_sizes.{package} must be a positive integer\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 479,
      "code_snippet": "f\"Failed to save configuration to {config_path}: {e}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/external_security.py",
      "line_number": 305,
      "code_snippet": "analysis_parts.append(f\"{vulnerability_report.critical_count} critical vulnerabilities found\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/external_security.py",
      "line_number": 307,
      "code_snippet": "analysis_parts.append(f\"{vulnerability_report.high_count} high severity vulnerabilities\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/external_security.py",
      "line_number": 363,
      "code_snippet": "suggestions.append(f\"CRITICAL: Update {package} to version {fixed_versions[0]} or later\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/external_security.py",
      "line_number": 365,
      "code_snippet": "suggestions.append(f\"CRITICAL: {package} has critical vulnerabilities - consider alternative package\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/external_security.py",
      "line_number": 370,
      "code_snippet": "suggestions.append(f\"HIGH: Update {package} to version {fixed_versions[0]} or later\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 167,
      "code_snippet": "warnings.append(f\"High memory usage: {memory.percent:.1f}%\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 172,
      "code_snippet": "warnings.append(f\"High disk usage: {disk_usage:.1f}%\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 233,
      "code_snippet": "lines.append(f\"# HELP {key} Docker Optimizer Agent metric\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 234,
      "code_snippet": "lines.append(f\"# TYPE {key} gauge\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 236,
      "code_snippet": "lines.append(f\"{key} {value}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 258,
      "code_snippet": "logger.debug(f\"Could not read requirements.txt: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 435,
      "code_snippet": "message=f\"Use optimized {language} base image: {base_images[0]}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 436,
      "code_snippet": "explanation=f\"Optimized base image for {language} {final_profile} workloads\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 437,
      "code_snippet": "fix_example=f\"FROM {base_images[0]}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 446,
      "code_snippet": "message=f\"Implement multi-stage build for {language}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 448,
      "code_snippet": "fix_example=f\"# Build stage\\nFROM {pattern['base_images']['development'][0]} AS builder\\n# ... build steps ...\\n# Runtime stage\\nFROM {base_images[0]}\\n# Copy built artifacts from builder stage\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 458,
      "code_snippet": "explanation=f\"{language}-specific optimization\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 459,
      "code_snippet": "fix_example=f\"# {optimization}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 469,
      "code_snippet": "explanation=f\"Security best practice for {language}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/language_optimizer.py",
      "line_number": 470,
      "code_snippet": "fix_example=f\"# {security_rec}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/layer_analyzer.py",
      "line_number": 163,
      "code_snippet": "layer_id=f\"estimated_{i}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 572,
      "code_snippet": "tag_str = \",\".join(f\"{k}={v}\" for k, v in tag_tuple)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 628,
      "code_snippet": "\"message\": f\"Exception during health check: {str(e)}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 652,
      "code_snippet": "return False, f\"Docker daemon is not available: {result.stderr}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 654,
      "code_snippet": "return False, f\"Docker daemon is not available: {str(e)}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 663,
      "code_snippet": "return True, f\"Memory usage: {usage_percent:.1f}%\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 665,
      "code_snippet": "return True, f\"Memory usage high: {usage_percent:.1f}%\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 667,
      "code_snippet": "return False, f\"Memory usage critical: {usage_percent:.1f}%\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 669,
      "code_snippet": "return False, f\"Failed to check memory: {str(e)}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 678,
      "code_snippet": "return True, f\"Disk usage: {usage_percent:.1f}%\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 680,
      "code_snippet": "return True, f\"Disk usage high: {usage_percent:.1f}%\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 682,
      "code_snippet": "return False, f\"Disk usage critical: {usage_percent:.1f}%\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 684,
      "code_snippet": "return False, f\"Failed to check disk: {str(e)}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 711,
      "code_snippet": "log_file = self.log_dir / f\"{service_name}.log\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 755,
      "code_snippet": "self.logger.info(f\"Starting operation: {operation_type}\", context=context)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 766,
      "code_snippet": "self.logger.error(f\"Operation failed: {operation_type}\", context=context, exception=e)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 775,
      "code_snippet": "f\"Operation completed: {operation_type}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 827,
      "code_snippet": "raise ValueError(f\"Unsupported export format: {format}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 870,
      "code_snippet": "self.logger.info(f\"Log level updated to {new_level.value}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 872,
      "code_snippet": "self.logger.warning(f\"Invalid log level: {config['log_level']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 47,
      "code_snippet": "raise ValueError(f'Severity must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 293,
      "code_snippet": "return f\"{self.size_bytes}B\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 295,
      "code_snippet": "return f\"{self.size_bytes / 1024:.1f}KB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 297,
      "code_snippet": "return f\"{self.size_bytes / (1024 * 1024):.1f}MB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 299,
      "code_snippet": "return f\"{self.size_bytes / (1024 * 1024 * 1024):.1f}GB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 356,
      "code_snippet": "raise ValueError(f'Priority must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 423,
      "code_snippet": "raise ValueError(f'Severity must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 431,
      "code_snippet": "raise ValueError(f'Rule type must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 500,
      "code_snippet": "raise ValueError(f'Framework must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 601,
      "code_snippet": "raise ValueError(f'Registry type must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 609,
      "code_snippet": "raise ValueError(f'Impact must be one of: {\", \".join(allowed)}')",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 184,
      "code_snippet": "name=current_stage.get('name', f'stage{len(stages)}'),",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 199,
      "code_snippet": "stage_name = f'stage{len(stages)}'",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 204,
      "code_snippet": "stage_commands.append(f\"{instruction['instruction']} {instruction['value']}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 209,
      "code_snippet": "name=current_stage.get('name', f'stage{len(stages)}'),",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 233,
      "code_snippet": "if stage.name and stage.name != f'stage{i}':",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 234,
      "code_snippet": "optimized_lines.append(f\"FROM {optimized_base} AS {stage.name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 236,
      "code_snippet": "optimized_lines.append(f\"FROM {optimized_base}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 249,
      "code_snippet": "explanation=f\"Optimized {len(stages)} stages with improved base images\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 336,
      "code_snippet": "base_image=f\"python:{version}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 344,
      "code_snippet": "base_image=f\"python:{version}-slim\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 401,
      "code_snippet": "base_image=f\"node:{version}-alpine\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 409,
      "code_snippet": "base_image=f\"node:{version}-alpine\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/multistage.py",
      "line_number": 459,
      "code_snippet": "base_image=f\"golang:{version}-alpine\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 238,
      "code_snippet": "raise ValueError(f\"Preset type {preset_type} is not available\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 280,
      "code_snippet": "optimized_content += f\"\\n\\n# {step.name}\\n{step.dockerfile_change}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 341,
      "code_snippet": "logger.info(f\"Loading custom preset from {file_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 393,
      "code_snippet": "f\"{preset1.name.lower()}_only\": list(preset1_names - preset2_names),",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 394,
      "code_snippet": "f\"{preset2.name.lower()}_only\": list(preset2_names - preset1_names),",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 481,
      "code_snippet": "merged_name = f\"Merged ({', '.join(p.name for p in presets)})\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimization_presets.py",
      "line_number": 485,
      "code_snippet": "description=f\"Merged preset combining: {', '.join(p.name for p in presets)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 189,
      "code_snippet": "f\"Multiple RUN statements ({run_count}) can be combined to reduce layers\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 287,
      "code_snippet": "original_instruction=f\"{len(run_commands)} separate RUN statements\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 289,
      "code_snippet": "reasoning=f\"Combined {len(run_commands)} RUN statements into one to reduce layers\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 304,
      "code_snippet": "original_instruction=f\"{len(run_commands)} separate RUN statements\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 306,
      "code_snippet": "reasoning=f\"Combined {len(run_commands)} RUN statements into one to reduce layers\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 368,
      "code_snippet": "explanations.append(f\"Applied {len(security_fixes)} security improvements\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 372,
      "code_snippet": "f\"Applied {len(layer_optimizations)} layer optimizations\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 412,
      "code_snippet": "return f\"{estimated_mb}MB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 457,
      "code_snippet": "\"description\": f\"Detected {analysis['language']} project\" + (",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/optimizer.py",
      "line_number": 458,
      "code_snippet": "f\" with {analysis['framework']} framework\" if analysis['framework'] else \"\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 210,
      "code_snippet": "explanation=f\"Analysis failed: {str(e)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 238,
      "code_snippet": "explanation=f\"Analysis failed: {str(result)}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 254,
      "code_snippet": "logger.info(f\"Scaling workers from {self.max_workers} to {new_max}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 260,
      "code_snippet": "logger.info(f\"Scaling workers from {self.max_workers} to {new_max}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 349,
      "code_snippet": "original_size=f\"{original_size // 1024} KB\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 350,
      "code_snippet": "optimized_size=f\"{optimized_size // 1024} KB\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/realtime_suggestions.py",
      "line_number": 72,
      "code_snippet": "if f\"from {base_image}\" in content_lower:",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/realtime_suggestions.py",
      "line_number": 217,
      "code_snippet": "message=f\"Consider using {language_image} for better optimization\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/realtime_suggestions.py",
      "line_number": 219,
      "code_snippet": "fix_example=f\"FROM {language_image}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/realtime_suggestions.py",
      "line_number": 324,
      "code_snippet": "message=f\"Combine {len(run_block)} RUN commands into one\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 67,
      "code_snippet": "logger.info(f\"Scanning ECR vulnerabilities for {image_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 84,
      "code_snippet": "registry_url=f\"123456789012.dkr.ecr.us-west-2.amazonaws.com/{image_name}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 87,
      "code_snippet": "logger.error(f\"Failed to scan ECR vulnerabilities for {image_name}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 93,
      "code_snippet": "registry_url=f\"123456789012.dkr.ecr.us-west-2.amazonaws.com/{image_name}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 118,
      "code_snippet": "logger.info(f\"Scanning ACR vulnerabilities for {image_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 130,
      "code_snippet": "registry_url=f\"myregistry.azurecr.io/{image_name}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 142,
      "code_snippet": "logger.info(f\"Scanning GCR vulnerabilities for {image_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 154,
      "code_snippet": "registry_url=f\"gcr.io/my-project/{image_name}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 187,
      "code_snippet": "error_msg = f\"Unsupported registry type: {registry_type}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 211,
      "code_snippet": "logger.info(f\"Comparing {image_name} across registries: {registries}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 219,
      "code_snippet": "logger.warning(f\"Failed to scan {registry} for {image_name}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 293,
      "code_snippet": "title=f\"Use {registry} optimized {language} image\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 294,
      "code_snippet": "description=f\"Switch to {registry}'s optimized {language} base image for better security and performance\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 295,
      "code_snippet": "dockerfile_change=f\"FROM {images[language]}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 296,
      "code_snippet": "security_benefit=f\"{registry} provides regular security updates and scanning\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 389,
      "code_snippet": "dockerfile_change=f\"# Consider using public.ecr.aws equivalent of {base_image}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/security.py",
      "line_number": 136,
      "code_snippet": "description=f\"Detected potentially dangerous pattern: {pattern}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/size_estimator.py",
      "line_number": 120,
      "code_snippet": "return f\"{total_size_mb / 1024:.1f}GB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/docker_optimizer/size_estimator.py",
      "line_number": 122,
      "code_snippet": "return f\"{total_size_mb}MB\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 64,
      "code_snippet": "logger.error(f\"Failed to load configuration: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 112,
      "code_snippet": "click.echo(f\"\ud83d\udcc4 Schedule saved to {output}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 116,
      "code_snippet": "click.echo(f\"   ID: {schedule.id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 117,
      "code_snippet": "click.echo(f\"   Name: {schedule.name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 118,
      "code_snippet": "click.echo(f\"   Start Time: {schedule.start_time}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 119,
      "code_snippet": "click.echo(f\"   Status: {schedule.status}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 120,
      "code_snippet": "click.echo(f\"   Objectives: {[obj.value for obj in schedule.objectives]}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 123,
      "code_snippet": "click.echo(f\"\u274c Error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 126,
      "code_snippet": "logger.error(f\"Unexpected error: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 127,
      "code_snippet": "click.echo(f\"\u274c Unexpected error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 188,
      "code_snippet": "click.echo(f\"\ud83d\ude80 Starting optimization with {algorithm} algorithm...\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 189,
      "code_snippet": "click.echo(f\"\ud83d\udcca Tasks: {len(schedule.tasks)}, Resources: {len(schedule.resources)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 213,
      "code_snippet": "click.echo(f\"   Makespan: {metrics.makespan}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 214,
      "code_snippet": "click.echo(f\"   Total Cost: ${metrics.total_cost:.2f}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 215,
      "code_snippet": "click.echo(f\"   Constraint Violations: {metrics.constraint_violations}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 216,
      "code_snippet": "click.echo(f\"   Optimization Time: {metrics.optimization_time}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 217,
      "code_snippet": "click.echo(f\"   Iterations: {metrics.iterations}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 218,
      "code_snippet": "click.echo(f\"   Converged: {'Yes' if metrics.convergence_achieved else 'No'}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 235,
      "code_snippet": "click.echo(f\"\ud83d\udcca Metrics saved to {metrics_output}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 242,
      "code_snippet": "click.echo(f\"\ud83d\udcbe Optimized schedule saved to {output}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 245,
      "code_snippet": "click.echo(f\"\u274c Optimization Error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 248,
      "code_snippet": "logger.error(f\"Unexpected error during optimization: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 249,
      "code_snippet": "click.echo(f\"\u274c Unexpected error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 274,
      "code_snippet": "click.echo(f\"\ud83d\udccb Schedule Status: {schedule_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 275,
      "code_snippet": "click.echo(f\"   Status: {status_info.get('status', 'unknown')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 276,
      "code_snippet": "click.echo(f\"   Created: {status_info.get('created_at', 'unknown')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 277,
      "code_snippet": "click.echo(f\"   Updated: {status_info.get('updated_at', 'unknown')}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 278,
      "code_snippet": "click.echo(f\"   Tasks: {status_info.get('task_count', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 279,
      "code_snippet": "click.echo(f\"   Resources: {status_info.get('resource_count', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 280,
      "code_snippet": "click.echo(f\"   Assignments: {status_info.get('assignment_count', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 284,
      "code_snippet": "click.echo(f\"   Makespan: {metrics.get('makespan_seconds', 0):.1f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 285,
      "code_snippet": "click.echo(f\"   Total Cost: ${metrics.get('total_cost', 0):.2f}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 286,
      "code_snippet": "click.echo(f\"   Violations: {metrics.get('constraint_violations', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 300,
      "code_snippet": "click.echo(f\"{'ID':<20} {'Name':<20} {'Status':<12} {'Tasks':<6} {'Resources':<9} {'Updated':<19}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 305,
      "code_snippet": "click.echo(f\"{schedule['id']:<20} {schedule['name'][:19]:<20} \"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 306,
      "code_snippet": "f\"{schedule['status']:<12} {schedule['task_count']:<6} \"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 307,
      "code_snippet": "f\"{schedule['resource_count']:<9} {updated:<19}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 312,
      "code_snippet": "click.echo(f\"\u274c Error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 315,
      "code_snippet": "logger.error(f\"Unexpected error: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 316,
      "code_snippet": "click.echo(f\"\u274c Unexpected error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 340,
      "code_snippet": "click.echo(f\"Total Optimizations: {metrics_data.get('total_optimizations', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 341,
      "code_snippet": "click.echo(f\"Successful: {metrics_data.get('successful_optimizations', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 342,
      "code_snippet": "click.echo(f\"Failed: {metrics_data.get('failed_optimizations', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 343,
      "code_snippet": "click.echo(f\"Success Rate: {metrics_data.get('success_rate', 0.0):.1%}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 344,
      "code_snippet": "click.echo(f\"Average Time: {metrics_data.get('average_optimization_time', 0.0):.2f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 346,
      "code_snippet": "click.echo(f\"Tasks Scheduled: {metrics_data.get('total_tasks_scheduled', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 347,
      "code_snippet": "click.echo(f\"Resources Allocated: {metrics_data.get('total_resources_allocated', 0)}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 354,
      "code_snippet": "click.echo(f\"  {algo}: {count}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 361,
      "code_snippet": "click.echo(f\"  {error_type}: {count}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 364,
      "code_snippet": "click.echo(f\"\u274c Error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 367,
      "code_snippet": "logger.error(f\"Unexpected error: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 368,
      "code_snippet": "click.echo(f\"\u274c Unexpected error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 387,
      "code_snippet": "click.echo(f\"\ud83d\udcc4 Example schedule saved to {output}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 392,
      "code_snippet": "logger.error(f\"Error generating example: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 393,
      "code_snippet": "click.echo(f\"\u274c Error: {e}\", err=True)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 435,
      "code_snippet": "task_ids = [f\"task_{i:03d}\" for i in range(num_tasks)]",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 447,
      "code_snippet": "'name': f\"Task {i+1}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 448,
      "code_snippet": "'description': f\"Example task {i+1} for quantum planning\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 458,
      "code_snippet": "'tags': [f\"example\", f\"complexity_{complexity}\"]",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 470,
      "code_snippet": "'id': f\"resource_{i:03d}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 471,
      "code_snippet": "'name': f\"{resource_type.title()} Resource {i+1}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 480,
      "code_snippet": "'tags': ['example', f\"type_{resource_type}\"]",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 487,
      "code_snippet": "'id': f\"example_schedule_{uuid4().hex[:8]}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 488,
      "code_snippet": "'name': f\"Example {complexity.title()} Schedule\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/cli.py",
      "line_number": 489,
      "code_snippet": "'description': f\"Generated example schedule with {num_tasks} tasks and {num_resources} resources\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/models/schedule.py",
      "line_number": 295,
      "code_snippet": "violations.append(f\"Task {task.id} depends on unscheduled task {dep_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/models/schedule.py",
      "line_number": 297,
      "code_snippet": "violations.append(f\"Task {task.id} starts before dependency {dep_id} completes\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/models/schedule.py",
      "line_number": 324,
      "code_snippet": "f\"Resource {resource.id} over-allocated at {slot}: \"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/models/schedule.py",
      "line_number": 325,
      "code_snippet": "f\"{allocation:.2f}/{resource.total_capacity:.2f}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/quantum_annealing.py",
      "line_number": 71,
      "code_snippet": "logger.info(f\"Starting quantum annealing optimization for schedule {schedule.id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/quantum_annealing.py",
      "line_number": 98,
      "code_snippet": "logger.debug(f\"New best energy: {neighbor_state.energy:.4f} at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/quantum_annealing.py",
      "line_number": 107,
      "code_snippet": "logger.info(f\"Convergence achieved at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/quantum_annealing.py",
      "line_number": 112,
      "code_snippet": "logger.info(f\"Final temperature reached at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/quantum_annealing.py",
      "line_number": 126,
      "code_snippet": "logger.info(f\"Optimization completed. Final energy: {self.best_state.energy:.4f}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 72,
      "code_snippet": "self.logger = logging.getLogger(f\"{__name__}.{self.__class__.__name__}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 84,
      "code_snippet": "self.logger.info(f\"QAOA allocator initialized with {self.params.layers} layers\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 87,
      "code_snippet": "self.logger.error(f\"Failed to initialize QAOA allocator: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 88,
      "code_snippet": "raise OptimizationError(f\"Initialization failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 105,
      "code_snippet": "self.logger.info(f\"Starting QAOA resource allocation for schedule {schedule.id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 138,
      "code_snippet": "self.logger.debug(f\"New best cost: {best_cost:.4f} at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 142,
      "code_snippet": "self.logger.warning(f\"Invalid state generated at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 149,
      "code_snippet": "self.logger.error(f\"Error in iteration {iteration}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 154,
      "code_snippet": "raise OptimizationError(f\"Too many errors during optimization: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 173,
      "code_snippet": "self.logger.info(f\"Convergence achieved at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 195,
      "code_snippet": "self.logger.info(f\"QAOA optimization completed successfully in {optimization_time}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 199,
      "code_snippet": "self.logger.error(f\"QAOA optimization failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 201,
      "code_snippet": "raise OptimizationError(f\"Resource allocation failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 231,
      "code_snippet": "errors.append(f\"Task {task.id} has invalid dependency {dep_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 240,
      "code_snippet": "self.warnings.append(f\"Task {task.id} has no resource requirements\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 244,
      "code_snippet": "errors.append(f\"Task {task.id} has invalid resource requirement: {resource_type}={amount}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 248,
      "code_snippet": "self.logger.error(f\"Schedule validation failed: {error_msg}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 249,
      "code_snippet": "raise ValidationError(f\"Invalid schedule: {error_msg}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 297,
      "code_snippet": "self.logger.warning(f\"Error calculating assignment for task {task.id} to resource {resource.id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 311,
      "code_snippet": "self.warnings.append(f\"Fallback assignment for task {task.id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 326,
      "code_snippet": "self.logger.debug(f\"Generated initial state with cost {cost:.4f}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 330,
      "code_snippet": "self.logger.error(f\"Failed to generate initial state: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 331,
      "code_snippet": "raise OptimizationError(f\"Initial state generation failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 380,
      "code_snippet": "self.logger.error(f\"Error applying QAOA layers: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 438,
      "code_snippet": "self.logger.debug(f\"Error evaluating resource {resource.id} for task {task_id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 450,
      "code_snippet": "self.logger.warning(f\"Error in cost layer: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 490,
      "code_snippet": "self.logger.debug(f\"Error in mixer operation: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 496,
      "code_snippet": "self.logger.warning(f\"Error in mixer layer: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 555,
      "code_snippet": "self.logger.error(f\"Error calculating cost expectation: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 577,
      "code_snippet": "self.logger.debug(f\"Error calculating allocation amount: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 603,
      "code_snippet": "self.logger.debug(f\"Error calculating assignment score: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 632,
      "code_snippet": "self.logger.debug(f\"Error updating parameters: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 659,
      "code_snippet": "errors.append(f\"Resource {resource_id} over-allocated: {load}/{resource.total_capacity}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 664,
      "code_snippet": "errors.append(f\"Task {task_id} has invalid allocation: {allocation}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 672,
      "code_snippet": "self.logger.error(f\"Error validating state: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 673,
      "code_snippet": "state.validation_errors = [f\"Validation error: {e}\"]",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 712,
      "code_snippet": "self.logger.error(f\"Failed to generate fallback state: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 768,
      "code_snippet": "self.logger.error(f\"Error checking circular dependencies: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 802,
      "code_snippet": "self.logger.info(f\"Applied {len(state.resource_assignments)} assignments to schedule\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 805,
      "code_snippet": "self.logger.error(f\"Error applying solution to schedule: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 806,
      "code_snippet": "raise ResourceAllocationError(f\"Failed to apply solution: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/qaoa_allocator.py",
      "line_number": 823,
      "code_snippet": "self.logger.error(f\"Error calculating metrics: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 111,
      "code_snippet": "self.logger = logging.getLogger(f\"{__name__}.{self.__class__.__name__}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 158,
      "code_snippet": "self.logger.info(f\"Starting VQE dependency resolution for {len(schedule.tasks)} tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 185,
      "code_snippet": "self.logger.info(f\"VQE dependency resolution completed in {optimization_time:.2f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 190,
      "code_snippet": "self.logger.error(f\"VQE dependency resolution failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 191,
      "code_snippet": "raise OptimizationError(f\"Dependency resolution failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 209,
      "code_snippet": "f\"Task {task.id} has invalid dependencies: {invalid_deps}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 222,
      "code_snippet": "self.logger.error(f\"Dependency validation failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 410,
      "code_snippet": "self.logger.info(f\"Created {len(clusters)} dependency clusters\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 471,
      "code_snippet": "self.logger.debug(f\"Optimizing cluster {cluster.id} with {len(cluster.tasks)} tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 486,
      "code_snippet": "self.logger.debug(f\"Cluster {cluster.id} new best energy: {new_state.energy:.4f}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 498,
      "code_snippet": "self.logger.debug(f\"Cluster {cluster.id} converged at iteration {iteration}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 504,
      "code_snippet": "self.logger.error(f\"Single cluster optimization failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 512,
      "code_snippet": "self.logger.info(f\"Optimizing {len(clusters)} clusters in parallel\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 538,
      "code_snippet": "self.logger.error(f\"Cluster {cluster.id} optimization failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 547,
      "code_snippet": "self.logger.error(f\"Multi-cluster optimization failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 839,
      "code_snippet": "self.logger.warning(f\"Using fallback topological sort for cluster {cluster.id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 902,
      "code_snippet": "self.logger.info(f\"Applied dependency order to {len(ordered_tasks)} tasks\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 905,
      "code_snippet": "self.logger.error(f\"Failed to apply dependency order: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/algorithms/vqe_dependencies.py",
      "line_number": 906,
      "code_snippet": "raise OptimizationError(f\"Failed to apply dependency order: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/exceptions.py",
      "line_number": 23,
      "code_snippet": "detail_str = \", \".join(f\"{k}={v}\" for k, v in self.details.items())",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/exceptions.py",
      "line_number": 24,
      "code_snippet": "return f\"{self.message} ({detail_str})\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/exceptions.py",
      "line_number": 48,
      "code_snippet": "return f\"{base_str} - Validation errors: {errors_str}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/exceptions.py",
      "line_number": 302,
      "code_snippet": "message = f\"Task not found: {task_id}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/exceptions.py",
      "line_number": 321,
      "code_snippet": "message = f\"Resource not found: {resource_id}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/exceptions.py",
      "line_number": 340,
      "code_snippet": "message = f\"Schedule not found: {schedule_id}\"",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 140,
      "code_snippet": "self.logger = logging.getLogger(f\"{__name__}.{self.__class__.__name__}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 162,
      "code_snippet": "self.logger.info(f\"Quantum task planner initialized with {len(self.algorithms)} algorithms\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 165,
      "code_snippet": "self.logger.error(f\"Failed to initialize quantum task planner: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 166,
      "code_snippet": "raise ConfigurationError(f\"Planner initialization failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 185,
      "code_snippet": "self.logger.info(f\"Cancelled optimization for schedule {schedule_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 198,
      "code_snippet": "self.logger.error(f\"Error during shutdown: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 220,
      "code_snippet": "self.logger.info(f\"Creating schedule {schedule_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 227,
      "code_snippet": "raise ValidationError(f\"Schedule {schedule_id} already exists\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 233,
      "code_snippet": "self.logger.warning(f\"Schedule {schedule_id} has start time in the past\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 248,
      "code_snippet": "self.logger.info(f\"Schedule {schedule_id} created successfully\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 252,
      "code_snippet": "self.logger.error(f\"Failed to create schedule {schedule_id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 255,
      "code_snippet": "raise SchedulingError(f\"Schedule creation failed: {e}\", schedule_id=schedule_id) from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 277,
      "code_snippet": "self.logger.debug(f\"Added task {task.id} to schedule {schedule_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 280,
      "code_snippet": "self.logger.error(f\"Failed to add task {task.id} to schedule {schedule_id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 283,
      "code_snippet": "raise SchedulingError(f\"Failed to add task: {e}\", schedule_id=schedule_id) from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 305,
      "code_snippet": "self.logger.debug(f\"Added resource {resource.id} to schedule {schedule_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 308,
      "code_snippet": "self.logger.error(f\"Failed to add resource {resource.id} to schedule {schedule_id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 311,
      "code_snippet": "raise SchedulingError(f\"Failed to add resource: {e}\", schedule_id=schedule_id) from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 335,
      "code_snippet": "self.logger.info(f\"Starting optimization of schedule {schedule_id} with {algorithm_name}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 357,
      "code_snippet": "self.logger.info(f\"Schedule {schedule_id} optimized successfully in {duration:.2f}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 365,
      "code_snippet": "self.logger.error(f\"Optimization failed for schedule {schedule_id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 369,
      "code_snippet": "self.logger.info(f\"Attempting fallback optimization with {self.config.fallback_algorithm}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 374,
      "code_snippet": "self.logger.error(f\"Fallback optimization also failed: {fallback_error}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 378,
      "code_snippet": "raise OptimizationError(f\"Schedule optimization failed: {e}\",",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 442,
      "code_snippet": "self.logger.error(f\"Failed to get optimization status for {schedule_id}: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 479,
      "code_snippet": "self.logger.error(f\"Failed to list schedules: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 498,
      "code_snippet": "self.logger.info(f\"Initialized {len(algorithms)} quantum algorithms\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 501,
      "code_snippet": "self.logger.error(f\"Failed to initialize algorithms: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 502,
      "code_snippet": "raise ConfigurationError(f\"Algorithm initialization failed: {e}\") from e",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 509,
      "code_snippet": "raise SchedulingError(f\"Schedule {schedule_id} not found\", schedule_id=schedule_id)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 521,
      "code_snippet": "errors.append(f\"Task {task.id} already exists in schedule\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 538,
      "code_snippet": "raise ValidationError(f\"Invalid task {task.id}: {'; '.join(errors)}\", errors)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 568,
      "code_snippet": "raise ValidationError(f\"Invalid resource {resource.id}: {'; '.join(errors)}\", errors)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 590,
      "code_snippet": "errors.append(f\"Task {task.id} has invalid dependency {dep_id}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 593,
      "code_snippet": "raise ValidationError(f\"Schedule {schedule.id} not ready for optimization: {'; '.join(errors)}\", errors)",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 601,
      "code_snippet": "raise OptimizationError(f\"Algorithm {algorithm} not available\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 614,
      "code_snippet": "raise OptimizationError(f\"Unknown algorithm: {algorithm}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 618,
      "code_snippet": "raise TimeoutError(f\"Optimization timeout after {self.config.optimization_timeout_seconds}s\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 623,
      "code_snippet": "self.logger.warning(f\"Optimization attempt {attempt + 1} failed: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 628,
      "code_snippet": "raise OptimizationError(f\"Optimization failed after {self.config.max_retry_attempts} attempts: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 650,
      "code_snippet": "self.logger.info(f\"Metrics exported to {metrics_path}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "medium",
      "category": "injection",
      "title": "Potential f_string_with_variables",
      "description": "Code may be vulnerable to injection attacks",
      "file_path": "src/quantum_task_planner/core/planner.py",
      "line_number": 653,
      "code_snippet": "self.logger.error(f\"Failed to export metrics: {e}\")",
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "high",
      "category": "dependencies",
      "title": "Potentially vulnerable dependency: pyyaml",
      "description": "PyYAML < 5.4 has arbitrary code execution vulnerability",
      "file_path": "requirements-dev.txt",
      "line_number": null,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "high",
      "category": "dependencies",
      "title": "Potentially vulnerable dependency: pyyaml",
      "description": "PyYAML < 5.4 has arbitrary code execution vulnerability",
      "file_path": "pyproject.toml",
      "line_number": null,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "autonomous_execution.py",
      "line_number": 375,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "autonomous_scheduler.py",
      "line_number": 74,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "autonomous_scheduler.py",
      "line_number": 309,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "enhanced_discovery.py",
      "line_number": 102,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "value_dashboard.py",
      "line_number": 126,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "value_dashboard.py",
      "line_number": 156,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 59,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 61,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 114,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 134,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 162,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "scripts/collect-metrics.py",
      "line_number": 174,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/autonomous_backlog.py",
      "line_number": 240,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_data_validation.py",
      "line_number": 50,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_data_validation.py",
      "line_number": 61,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 24,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_import_dependencies.py",
      "line_number": 48,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_integration.py",
      "line_number": 30,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_integration.py",
      "line_number": 65,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_integration.py",
      "line_number": 267,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_logging_observability.py",
      "line_number": 329,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_algorithms.py",
      "line_number": 413,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "tests/test_algorithms.py",
      "line_number": 426,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/__init__.py",
      "line_number": 20,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/__init__.py",
      "line_number": 43,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/__init__.py",
      "line_number": 50,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/__init__.py",
      "line_number": 57,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/__init__.py",
      "line_number": 64,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/advanced_security.py",
      "line_number": 59,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 217,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 258,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 292,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 295,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 298,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1287,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1310,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/cli.py",
      "line_number": 1325,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 69,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 71,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 235,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 240,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/config.py",
      "line_number": 477,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 45,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 105,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 123,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 143,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/health.py",
      "line_number": 173,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 152,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 625,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 668,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/logging_observability.py",
      "line_number": 683,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/models.py",
      "line_number": 9,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/performance.py",
      "line_number": 205,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/docker_optimizer/registry_integration.py",
      "line_number": 318,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/quantum_task_planner/__init__.py",
      "line_number": 17,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/quantum_task_planner/__init__.py",
      "line_number": 26,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    },
    {
      "severity": "low",
      "category": "error_handling",
      "title": "Exception without logging",
      "description": "Exception caught but not logged",
      "file_path": "src/quantum_task_planner/__init__.py",
      "line_number": 35,
      "code_snippet": null,
      "timestamp": "2024-01-01T00:00:00Z"
    }
  ],
  "recommendations": [
    "\u26a0\ufe0f HIGH: Review and fix high-severity security issues",
    "\ud83d\udee1\ufe0f Implement proper input sanitization and validation",
    "\ud83d\udce6 Update vulnerable dependencies to secure versions",
    "\ud83d\udc1b Improve error handling and logging practices",
    "\ud83d\udd12 Implement comprehensive input validation",
    "\ud83d\udccb Conduct regular security audits",
    "\ud83e\uddea Add security-focused unit tests",
    "\ud83d\udcda Security training for development team",
    "\ud83d\udd04 Automated security scanning in CI/CD pipeline"
  ]
}